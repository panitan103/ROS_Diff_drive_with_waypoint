base_global_planner: navfn/NavfnROS
base_local_planner: teb_local_planner/TebLocalPlannerROS

NavfnROS:
  allow_unknown: false # Specifies whether or not to allow navfn to create plans that traverse unknown space.
  default_tolerance: 0.1 # A tolerance on the goal point for the planner.

TebLocalPlannerROS:

 odom_topic: odom
 map_frame:  map
 # Trajectory
  
 teb_autosize: True
 dt_ref: 0.3 #default 0.5
 dt_hysteresis: 0.1
 global_plan_overwrite_orientation: True
 allow_init_with_backwards_motion: True #defualt True
 max_global_plan_lookahead_dist: 2.0
 feasibility_check_no_poses: 5 #default 1
    
 # Robot
         
 max_vel_x: 0.18
 max_vel_x_backwards: 0.18
 max_vel_y: 0.0
 max_vel_theta: 0.4 # the angular velocity is also bounded by min_turning_radius in case of a carlike robot (r = v / omega)
 acc_lim_x: 0.3
 acc_lim_theta: 0.6

  # acc_lim_x: 0.12
  
  # acc_lim_y: 0
  # acc_lim_th: 0.25
  
  # max_vel_trans: 0.12 #0.05
  # min_vel_trans: -0.12 #0.0125
  # max_vel_x: 0.12 #0.04
  # min_vel_x: -0.12 #0.01
  # max_vel_y: 0
  # min_vel_y: 0
  # max_vel_theta: 0.25
  # min_vel_theta: -0.25
  # stopped_theta_vel: 0.25

 # ********************** Carlike robot parameters ********************
 min_turning_radius: 0        # Min turning radius of the carlike robot (compute value using a model or adjust with rqt_reconfigure manually)
 wheelbase: 0                 # Wheelbase of our robot
 cmd_angle_instead_rotvel: false # stage simulator takes the angle instead of the rotvel as input (twist message)
 # ********************************************************************

 footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
  type: "polygon"
  # radius: 0.04 # for type "circular"
  #  line_start: [0.0, 0.0] # for type "line"
  #  line_end: [0.4, 0.0] # for type "line"
  #  front_offset: 0.2 # for type "two_circles"
  #  front_radius: 0.2 # for type "two_circles"
  #  rear_offset: 0.2 # for type "two_circles"
  #  rear_radius: 0.2 # for type "two_circles"
  vertices: [[-0.155, -0.155], [-0.155, 0.155], [0.155, 0.155], [0.155, -0.155]] # for type "polygon"
  # vertices: footprint # for type "polygon"

 # GoalTolerance
    
 xy_goal_tolerance: 0.10
 yaw_goal_tolerance: 0.08
 free_goal_vel: False
    
 # Obstacles
    
 min_obstacle_dist: 0.1 # This value must also include our robot's expansion, since footprint_model is set to "line".
 inflaction_dist: 0.5
 include_costmap_obstacles: True
 costmap_obstacles_behind_robot_dist: 1.0
 obstacle_poses_affected: 30

 dynamic_obstacle_inflaction_dist: 0.5
 include_dynamic_obstacles: True

 costmap_converter_plugin: ""
 costmap_converter_spin_thread: True
 costmap_converter_rate: 5

 # Optimization
    
 no_inner_iterations: 5
 no_outer_iterations: 4
 optimization_activate: True
 optimization_verbose: False
 penalty_epsilon: 0.1
 weight_max_vel_x: 2
 weight_max_vel_theta: 1
 weight_acc_lim_x: 1
 weight_acc_lim_theta: 1
 weight_kinematics_nh: 1000
 weight_kinematics_forward_drive: 300
 weight_kinematics_turning_radius: 1
 weight_optimaltime: 1
 weight_obstacle: 50
 weight_dynamic_obstacle: 10 # not in use yet

 # Homotopy Class Planner

 enable_homotopy_class_planning: True
 enable_multithreading: True
 simple_exploration: False
 max_number_classes: 4
 selection_cost_hysteresis: 1.0
 selection_obst_cost_scale: 1.0
 selection_alternative_time_cost: False
 roadmap_graph_no_samples: 15
 roadmap_graph_area_width: 5
 h_signature_prescaler: 0.5
 h_signature_threshold: 0.1
 obstacle_keypoint_offset: 0.1
 obstacle_heading_threshold: 0.45
 visualize_hc_graph: False
